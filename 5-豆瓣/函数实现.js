let func = {
    '75':{
        'debug':function r() {
                    if (r.enabled) {
                        var t = r
                          , n = +new Date
                          , o = n - (c || n);
                        t.diff = o,
                        t.prev = c,
                        t.curr = n,
                        c = n;
                        for (var i = new Array(arguments.length), a = 0; a < i.length; a++)
                            i[a] = arguments[a];
                        i[0] = e.coerce(i[0]),
                        "string" != typeof i[0] && i.unshift("%O");
                        var s = 0;
                        i[0] = i[0].replace(/%([a-zA-Z%])/g, function(r, n) {
                            if ("%%" === r)
                                return r;
                            s++;
                            var o = e.formatters[n];
                            if ("function" == typeof o) {
                                var a = i[s];
                                r = o.call(t, a),
                                i.splice(s, 1),
                                s--
                            }
                            return r
                        }),
                        e.formatArgs.call(t, i),
                        (r.log || e.log || console.log.bind(console)).apply(t, i)
                    }
                }
    }
}

function r(n) {
    return func[`${n}`]
}

let get_info = function () {

    let i = Object

    i.prototype.slice = function(t, e,var3) {
        var r = this.length;
        t = ~~t,
            e = void 0 === e ? r : ~~e,
            t < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r),
            e < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
        e < t && (e = t);
        var n;
        if (true)
            n = this.subarray(t, e)
        else {
            var o = e - t;
            n = new i(o, void 0);
            for (var a = 0; a < o; ++a)
                n[a] = this[a + t]
        }
        return n
    }

    i.prototype.readUInt8 = function(t, e) {
        return this[t]
        }

    i.prototype.readUInt32BE = function(t, e) {
        return e || I(t, 4, this.length),
        16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3])
    }
    i.prototype.readFloatBE = function(t, e) {
        return e || I(t, 4, this.length),J.read(this, t, !1, 23, 4)
        }

    i.prototype.readDoubleBE = function(t, e) {
        return e || I(t, 8, this.length),
        J.read(this, t, !1, 52, 8)
        }
    i.prototype.readIntBE = function(t, e, r) {
            t |= 0,
            e |= 0,
            r || I(t, e, this.length);
            for (var n = e, o = 1, i = this[t + --n]; n > 0 && (o *= 256); )
                i += this[t + --n] * o;
            return o *= 128,
            i >= o && (i -= Math.pow(2, 8 * e)),
            i
        }

    let J = {}
    J.read = function(t, e, r, n, o) {
        var i, a, s = 8 * o - n - 1, u = (1 << s) - 1, c = u >> 1, f = -7, l = r ? o - 1 : 0, h = r ? -1 : 1, p = t[e + l];
        for (l += h,
        i = p & (1 << -f) - 1,
        p >>= -f,
        f += s; f > 0; i = 256 * i + t[e + l],
        l += h,
        f -= 8)
            ;
        for (a = i & (1 << -f) - 1,
        i >>= -f,
        f += n; f > 0; a = 256 * a + t[e + l],
        l += h,
        f -= 8)
            ;
        if (0 === i)
            i = 1 - c;
        else {
            if (i === u)
                return a ? NaN : 1 / 0 * (p ? -1 : 1);
            a += Math.pow(2, n),
            i -= c
        }
        return (p ? -1 : 1) * a * Math.pow(2, i - n)
    }
    ,
    J.write = function(t, e, r, n, o, i) {
        var a, s, u, c = 8 * i - o - 1, f = (1 << c) - 1, l = f >> 1, h = 23 === o ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = n ? 0 : i - 1, d = n ? 1 : -1, m = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
        for (e = Math.abs(e),
        isNaN(e) || e === 1 / 0 ? (s = isNaN(e) ? 1 : 0,
        a = f) : (a = Math.floor(Math.log(e) / Math.LN2),
        e * (u = Math.pow(2, -a)) < 1 && (a--,
        u *= 2),
        e += a + l >= 1 ? h / u : h * Math.pow(2, 1 - l),
        e * u >= 2 && (a++,
        u /= 2),
        a + l >= f ? (s = 0,
        a = f) : a + l >= 1 ? (s = (e * u - 1) * Math.pow(2, o),
        a += l) : (s = e * Math.pow(2, l - 1) * Math.pow(2, o),
        a = 0)); o >= 8; t[r + p] = 255 & s,
        p += d,
        s /= 256,
        o -= 8)
            ;
        for (a = a << o | s,
        c += o; c > 0; t[r + p] = 255 & a,
        p += d,
        a /= 256,
        c -= 8)
            ;
        t[r + p - d] |= 128 * m
    }

    function I(t, e, r) {
        if (t % 1 != 0 || t < 0)
            throw new RangeError("offset is not uint");
        if (t + e > r)
            throw new RangeError("Trying to access beyond buffer length")
    }
    return i
}()

let get_data = (function() {
    function o(t, e, r) {
        return e in t ? Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = r,
        t
    }
    function i(t, e) {
        e = e || 0;
        for (var r = 0, n = e; n < t.length; n++)
            r <<= 8,
            r |= 255 & t[n];
        return r
    }
    function a(t, e, r) {
        return e = e || 0,
        r = r || t.length - e,
        t.readIntBE(e, r)
    }
    function s(t, e) {
        return t.slice(e, e + 8).readUInt32BE(4, 8)
    }
    function u(t, e) {
        return e = e || 0,
        t.slice(e, e + 8).readInt32BE(4, 8)
    }
    function c(t) {
        for (var e = t.length, r = 0; r < e; r += 2) {
            var n = t[r];
            t[r] = t[r + 1],
            t[r + 1] = n
        }
        return t
    }
    var f = r(75)
      , l = r(84)
      , h = (r(85),
    "i");
    let e = {},t = {}
    e.maxObjectSize = 1e8,
    e.maxObjectCount = 32768,
    e.parseFile = function(t, e) {
        function r(t) {
            var r, n = null;
            try {
                r = parseBuffer(t)
            } catch (t) {
                n = t
            }
            e(n, r)
        }
        return n.isBuffer(t) ? r(t) : void l.readFile(t, function(t, n) {
            return t ? e(t) : void r(n)
        })
    }
    ,
    t.exports = function(t) {
        function r(e) {
            var r = O[e]
              , n = t[r]
              , o = (240 & n) >> 4
              , i = 15 & n
              , a = {
                offset: r,
                type: n,
                objType: o,
                objInfo: i,
                tableOffset: e
            };
            switch (o) {
            case 0:
                return l(a);
            case 1:
                return p(a);
            case 8:
                return d(a);
            case 2:
                return m(a);
            case 3:
                return y(a);
            case 6:
                return v(a);
            case 4:
                return g(a);
            case 5:
                return g(a, !0);
            case 10:
                return b(a);
            case 13:
                return w(a);
            default:
                throw new Error(2,o.toString(16))
            }
        }
        function l(t) {
            var e = t.objInfo
              , r = t.objType;
            switch (e) {
            case 0:
                return null;
            case 8:
                return !1;
            case 9:
                return !0;
            case 15:
                return null;
            default:
                throw new Error(3,r.toString(16))
            }
        }
        function p(r) {
            var n = r.offset
              , o = r.objInfo
              , i = Math.pow(2, o);
            if (i > 4)
                return u(t.slice(n + 1, n + 1 + i));
            if (i < e.maxObjectSize)
                return a(t.slice(n + 1, n + 1 + i));
            throw new Error("4 " + i + " " + e.maxObjectSize)
        }
        function d(r) {
            var n = r.offset
              , a = r.objInfo
              , s = a;
            if (s < e.maxObjectSize)
                return o({}, h, i(t.slice(n + 1, n + 1 + s)));
            throw new Error("4 " + s + " " + e.maxObjectSize)
        }
        function m(r) {
            var n = r.offset
              , o = r.objInfo
              , i = Math.pow(2, o);
            if (!(i < e.maxObjectSize))
                throw new Error("4 " + i + " " + e.maxObjectSize);
            var a = t.slice(n + 1, n + 1 + i);
            return 4 === i ? a.readFloatBE(0) : 8 === i ? a.readDoubleBE(0) : void 0
        }
        function y(e) {
            var r = e.offset
              , n = e.objInfo;
            3 != n && console.error(5, n);
            var o = t.slice(r + 1, r + 9);
            return new Date(9783072e5 + 1e3 * o.readDoubleBE(0))
        }
        function v(r) {
            var n = r.offset
              , o = r.objInfo
              , a = 1
              , s = o;
            if (15 == o) {
                var u = t[n + 1]
                  , c = (240 & u) / 16;
                1 != c && console.error(6, c);
                var f = 15 & u
                  , l = Math.pow(2, f);
                a = 2 + l,
                s = i(t.slice(n + 2, n + 2 + l))
            }
            if (s < e.maxObjectSize)
                return t.slice(n + a, n + a + s);
            throw new Error("4 " + s + " " + e.maxObjectSize)
        }
        function g(r, o) {
            var a = r.offset
              , s = r.objInfo;
            o = o || 0;
            var u = "utf8"
              , f = s
              , l = 1;
            if (15 == s) {
                var h = t[a + 1]
                  , p = (240 & h) / 16;
                if (1 != p)
                    throw new Error("7 " + p);
                var d = 15 & h
                  , m = Math.pow(2, d);
                l = 2 + m,
                f = i(t.slice(a + 2, a + 2 + m))
            }
            if ((f *= o + 1) < e.maxObjectSize) {
                var y = new n(t.slice(a + l, a + l + f));
                // console.log(y)
                s = Turn_the_text(y)
                // data_arr.push(s)
                // console.log(s)
                return s
                // return o && (y = c(y),u = "ucs2"),y.toString(u)
            }
            throw new Error("4 " + f + " " + e.maxObjectSize)
        }
        function n(t) {
            return t
        }
        //数组结果
        function b(n) {
            var o = n.offset
              , a = n.objInfo
              , s = a
              , u = 1;
            if (15 == a) {
                var c = t[o + 1]
                  , f = (240 & c) / 16;
                1 != f && console.error(8, f);
                var l = 15 & c
                  , h = Math.pow(2, l);
                u = 2 + h,
                s = i(t.slice(o + 2, o + 2 + h))
            }
            if (s * A > e.maxObjectSize)
                throw new Error(4);
            for (var p = [], d = 0; d < s; d++) {
                var m = i(t.slice(o + u + d * A, o + u + (d + 1) * A));
                p[d] = r(m)

            }
            // console.log(p)
            // console.log(p,'p-------',p.length)
            if (p.length!=0){
                if (p['\x00'] == undefined){
                    console.log(p,'p-------')
                    data_arr.push(p)
                }
                //

            }
            return p
        }
        function w(n) {
            var o = n.offset
              , a = n.objInfo
              , s = n.tableOffset
              , u = a
              , c = 1;
            if (15 == a) {
                var l = t[o + 1]
                  , h = (240 & l) / 16;
                1 != h && console.error(9, h);
                var p = 15 & l
                  , d = Math.pow(2, p);
                c = 2 + d,
                u = i(t.slice(o + 2, o + 2 + d))
            }
            if (2 * u * A > e.maxObjectSize)
                throw new Error(4);
            (0,
            f.debug)("Parsing dictionary #" + s);
            for (var m = {}, y = 0; y < u; y++) {
                var v = i(t.slice(o + c + y * A, o + c + (y + 1) * A))
                  , g = i(t.slice(o + c + u * A + y * A, o + c + u * A + (y + 1) * A))
                  , b = r(v)
                  , w = r(g);
                (0,
                f.debug)("  DICT #" + s + ": Mapped " + b + " to " + w),
                m[b] = w
            }
            return m
        }
        var _ = t.slice(t.length - 32, t.length)
          , E = _.readUInt8(6);
        (0,
        f.debug)("offsetSize: " + E);
        var A = _.readUInt8(7);
        (0,
        f.debug)("objectRefSize: " + A);
        var C = s(_, 8);
        (0,
        f.debug)("numObjects: " + C);
        var x = s(_, 16);
        (0,
        f.debug)("topObject: " + x);
        var S = s(_, 24);
        if ((0,
        f.debug)("offsetTableOffset: " + S),
        C > e.maxObjectCount)
            throw new Error(1);
        for (var O = [], T = 0; T < C; T++) {
            var P = t.slice(S + T * E, S + (T + 1) * E);
            O[T] = i(P, 0),
            (0,
            f.debug)("Offset for Object #" + T + " is " + O[T] + " [" + O[T].toString(16) + "]")
        }
        return r(x)
    }
    return t
}
)({})

function adjust(t) {
    for (var e = t.length, r = 0; r < e; r += 2) {
        var n = t[r];
        t[r] = t[r + 1],
        t[r + 1] = n
    }
    return t
}

function Turn_the_text(k, e, r) {
    let t = adjust(k)
    for (var n = t.slice(e, r), o = "", i = 0; i < n.length; i += 2)
        o += String.fromCharCode(n[i] + 256 * n[i + 1]);
    return o
}

// get_data.exports
let data_arr = []
const arr_big = [175,16,57,0,1,0,2,0,3,0,4,0,5,0,29,0,30,0,31,0,32,0,33,0,34,0,35,0,36,0,37,0,38,0,39,0,40,0,41,0,42,0,43,0,50,0,51,0,52,0,53,0,54,0,55,0,56,0,83,0,88,0,99,0,103,0,114,0,118,0,129,0,135,0,145,0,149,0,159,0,161,0,171,0,173,0,184,0,188,0,199,0,201,0,212,0,215,0,226,0,229,0,226,0,239,0,171,0,250,1,5,1,7,1,18,1,28,85,0,105,0,116,0,101,0,109,0,115,86,0,114,0,101,0,112,0,111,0,114,0,116,85,0,115,0,116,0,97,0,114,0,116,85,0,116,0,111,0,116,0,97,0,108,210,0,6,0,7,0,8,0,22,65,107,65,122,167,0,9,0,14,0,15,0,16,0,17,0,18,0,21,210,0,10,0,11,0,12,0,13,85,0,113,0,116,0,121,0,112,0,101,84,0,116,0,97,0,103,0,115,83,0,49,0,57,0,53,82,139,251,78,102,16,15,17,1,5,80,83,145,82,101,135,83,22,209,0,19,0,20,65,106,16,56,16,0,167,0,23,0,24,0,25,0,26,0,27,0,21,0,28,16,1,16,11,16,8,16,2,16,10,16,7,84,0,116,0,101,0,120,0,116,85,0,99,0,111,0,117,0,110,0,116,90,0,101,0,114,0,114,0,111,0,114,0,95,0,105,0,110,0,102,0,111,86,0,108,0,97,0,98,0,101,0,108,0,115,88,0,116,0,112,0,108,0,95,0,110,0,97,0,109,0,101,93,0,108,0,97,0,98,0,101,0,108,0,95,0,97,0,99,0,116,0,105,0,111,0,110,0,115,85,0,116,0,105,0,116,0,108,0,101,88,0,105,0,110,0,116,0,101,0,114,0,101,0,115,0,116,86,0,114,0,97,0,116,0,105,0,110,0,103,82,0,105,0,100,88,0,109,0,111,0,114,0,101,0,95,0,117,0,114,0,108,91,0,114,0,97,0,116,0,105,0,110,0,103,0,95,0,105,0,110,0,102,0,111,90,0,115,0,116,0,97,0,114,0,95,0,99,0,111,0,117,0,110,0,116,85,0,118,0,97,0,108,0,117,0,101,210,0,6,0,7,0,44,0,46,164,0,21,0,45,0,21,0,21,86,118,238,82,77,101,224,78,186,139,196,78,247,164,0,24,0,47,0,48,0,49,16,16,16,18,16,17,88,0,97,0,98,0,115,0,116,0,114,0,97,0,99,0,116,90,0,97,0,98,0,115,0,116,0,114,0,97,0,99,0,116,0,95,0,50,93,0,101,0,120,0,116,0,114,0,97,0,95,0,97,0,99,0,116,0,105,0,111,0,110,0,115,89,0,99,0,111,0,118,0,101,0,114,0,95,0,117,0,114,0,108,83,0,117,0,114,0,108,86,0,116,0,111,0,112,0,105,0,99,0,115,210,0,6,0,7,0,57,0,69,174,0,58,0,59,0,60,0,61,0,16,0,62,0,63,0,65,0,66,0,67,0,59,0,59,0,68,0,59,18,1,138,22,95,160,85,126,205,81,116,145,82,101,135,83,22,95,16,41,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,50,0,53,0,56,0,50,0,54,0,57,0,49,0,49,0,47,95,16,61,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,50,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,50,0,55,0,50,0,49,0,56,0,48,0,54,0,50,0,46,0,106,0,112,0,103,209,0,19,0,64,16,19,94,0,115,0,101,0,97,0,114,0,99,0,104,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,16,43,126,205,81,116,94,2,101,63,83,79,101,135,83,242,141,68,101,153,89,212,84,88,79,26,0,32,127,22,0,32,0,47,0,32,78,45,86,253,89,39,118,126,121,209,81,104,78,102,81,250,114,72,121,62,0,32,0,47,0,32,0,49,0,57,0,57,0,48,0,45,0,49,0,49,0,32,0,47,0,32,0,53,0,46,0,53,95,16,131,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,49,0,51,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,50,0,53,0,56,0,50,0,54,0,57,0,49,0,49,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,174,0,70,0,71,0,72,0,73,0,74,0,75,0,76,0,77,0,78,0,79,0,80,0,81,0,14,0,82,16,14,16,5,16,6,16,24,16,21,16,23,16,13,16,4,16,12,16,20,16,22,16,3,16,25,210,0,6,0,7,0,84,0,87,164,0,73,0,85,0,86,0,16,35,64,25,51,51,51,51,51,51,35,64,8,0,0,0,0,0,0,164,0,24,0,48,0,49,0,47,210,0,6,0,7,0,89,0,98,174,0,59,0,90,0,66,0,65,0,59,0,59,0,92,0,93,0,94,0,95,0,96,0,97,0,59,0,16,209,0,19,0,91,16,27,85,78,45,86,253,145,82,101,135,83,22,95,16,40,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,50,0,48,0,49,0,48,0,48,0,55,0,49,0,47,95,16,129,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,51,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,50,0,48,0,49,0,48,0,48,0,55,0,49,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,95,16,29,103,78,78,137,94,115,0,32,0,47,0,32,101,246,78,139,81,250,114,72,121,62,0,32,0,47,0,32,0,50,0,48,0,48,0,55,0,45,0,49,0,32,0,47,0,32,0,51,0,50,0,46,0,48,0,48,81,67,18,0,30,171,215,95,16,60,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,50,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,53,0,56,0,48,0,57,0,51,0,55,0,51,0,46,0,106,0,112,0,103,174,0,71,0,76,0,78,0,77,0,80,0,82,0,72,0,73,0,14,0,79,0,70,0,75,0,81,0,74,210,0,6,0,7,0,100,0,102,164,0,86,0,101,0,16,0,64,35,64,24,0,0,0,0,0,0,164,0,49,0,48,0,47,0,24,210,0,6,0,7,0,104,0,113,174,0,105,0,59,0,106,0,59,0,108,0,109,0,59,0,110,0,66,0,16,0,65,0,111,0,112,0,59,85,102,14,103,29,145,82,101,135,83,22,209,0,19,0,107,16,29,95,16,61,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,49,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,50,0,56,0,56,0,49,0,48,0,53,0,53,0,55,0,46,0,106,0,112,0,103,95,16,130,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,49,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,50,0,54,0,56,0,48,0,52,0,49,0,51,0,51,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,18,1,152,255,165,95,16,41,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,50,0,54,0,56,0,48,0,52,0,49,0,51,0,51,0,47,95,16,29,115,139,102,37,116,92,0,32,0,47,0,32,85,70,82,161,83,112,78,102,153,134,0,32,0,47,0,32,0,50,0,48,0,49,0,54,0,45,0,53,0,32,0,47,0,32,0,52,0,48,0,46,0,48,0,48,81,67,174,0,72,0,80,0,76,0,82,0,75,0,14,0,71,0,70,0,78,0,74,0,77,0,73,0,79,0,81,210,0,6,0,7,0,115,0,117,164,0,21,0,116,0,21,0,21,86,139,196,78,247,78,186,101,112,78,13,141,179,164,0,49,0,47,0,48,0,24,210,0,6,0,7,0,119,0,128,174,0,120,0,121,0,122,0,59,0,123,0,59,0,59,0,124,0,59,0,125,0,65,0,16,0,126,0,66,95,16,34,118,125,109,1,109,1,0,32,0,47,0,32,91,89,78,154,105,96,0,32,0,47,0,32,101,246,78,139,81,250,114,72,121,62,0,32,0,47,0,32,0,50,0,48,0,49,0,52,0,45,0,49,0,32,0,47,0,32,0,51,0,56,0,46,0,48,0,48,95,16,130,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,56,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,50,0,54,0,54,0,51,0,49,0,52,0,52,0,54,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,85,78,22,117,76,145,82,101,135,83,22,18,1,150,93,22,95,16,41,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,50,0,54,0,54,0,51,0,49,0,52,0,52,0,54,0,47,95,16,61,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,50,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,50,0,56,0,51,0,48,0,54,0,48,0,49,0,49,0,46,0,106,0,112,0,103,209,0,19,0,127,16,31,174,0,79,0,14,0,72,0,71,0,70,0,82,0,80,0,73,0,81,0,75,0,77,0,74,0,76,0,78,210,0,6,0,7,0,130,0,134,164,0,131,0,132,0,133,0,16,35,64,12,0,0,0,0,0,0,35,64,26,102,102,102,102,102,102,16,37,164,0,49,0,48,0,24,0,47,210,0,6,0,7,0,136,0,144,174,0,137,0,59,0,138,0,139,0,141,0,59,0,142,0,59,0,16,0,66,0,65,0,59,0,143,0,92,18,0,16,86,76,95,16,40,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,49,0,48,0,55,0,48,0,54,0,54,0,56,0,47,209,0,19,0,140,16,33,95,16,31,79,85,110,225,91,80,0,32,0,47,0,32,78,10,109,119,83,228,124,77,81,250,114,72,121,62,0,32,0,47,0,32,0,50,0,48,0,48,0,49,0,45,0,54,0,32,0,47,0,32,0,50,0,56,0,46,0,48,0,48,81,67,95,16,60,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,49,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,49,0,49,0,52,0,55,0,55,0,55,0,56,0,46,0,106,0,112,0,103,95,16,129,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,48,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,55,0,48,0,54,0,54,0,56,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,174,0,70,0,81,0,73,0,76,0,79,0,82,0,75,0,71,0,74,0,78,0,77,0,80,0,14,0,72,210,0,6,0,7,0,146,0,148,164,0,86,0,75,0,147,0,16,35,64,22,204,204,204,204,204,205,164,0,49,0,24,0,48,0,47,210,0,6,0,7,0,150,0,158,174,0,151,0,152,0,153,0,59,0,155,0,59,0,65,0,16,0,59,0,156,0,157,0,66,0,59,0,92,95,16,33,128,225,92,15,79,31,0,32,0,47,0,32,78,45,86,253,86,253,150,69,94,127,100,173,81,250,114,72,121,62,0,32,0,47,0,32,0,50,0,48,0,49,0,49,0,45,0,49,0,32,0,47,0,32,0,49,0,54,0,46,0,53,0,48,81,67,95,16,40,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,53,0,57,0,50,0,48,0,52,0,55,0,57,0,47,209,0,19,0,154,16,35,95,16,60,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,51,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,54,0,50,0,56,0,48,0,55,0,52,0,48,0,46,0,106,0,112,0,103,18,0,90,86,223,95,16,129,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,52,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,53,0,57,0,50,0,48,0,52,0,55,0,57,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,174,0,79,0,73,0,76,0,82,0,75,0,71,0,77,0,74,0,80,0,70,0,14,0,78,0,81,0,72,210,0,6,0,7,0,115,0,160,164,0,48,0,47,0,24,0,49,210,0,6,0,7,0,162,0,170,174,0,59,0,163,0,59,0,164,0,65,0,59,0,165,0,166,0,167,0,16,0,168,0,169,0,59,0,66,95,16,130,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,49,0,50,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,55,0,53,0,54,0,49,0,52,0,48,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,85,89,209,130,207,145,82,101,135,83,22,95,16,40,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,49,0,55,0,53,0,54,0,49,0,52,0,48,0,47,18,0,26,203,236,95,16,34,151,233,128,220,91,157,0,32,0,47,0,32,83,228,84,52,143,105,81,250,114,72,121,62,0,32,0,47,0,32,0,50,0,48,0,48,0,48,94,116,0,57,103,8,123,44,0,49,114,72,0,32,0,47,0,32,0,49,0,57,0,46,0,48,0,48,81,67,95,16,60,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,51,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,49,0,54,0,50,0,55,0,54,0,51,0,48,0,46,0,106,0,112,0,103,209,0,19,0,133,174,0,82,0,14,0,80,0,72,0,77,0,71,0,73,0,70,0,79,0,74,0,75,0,76,0,81,0,78,210,0,6,0,7,0,115,0,172,164,0,48,0,47,0,49,0,24,210,0,6,0,7,0,174,0,183,174,0,16,0,65,0,59,0,59,0,59,0,66,0,175,0,176,0,177,0,178,0,59,0,179,0,180,0,182,87,126,162,145,82,101,135,83,22,78,14,81,123,117,31,95,16,31,95,32,95,215,84,140,0,32,0,47,0,32,78,45,86,253,114,105,141,68,81,250,114,72,121,62,0,32,0,47,0,32,0,50,0,48,0,48,0,55,0,45,0,57,0,32,0,47,0,32,0,50,0,51,0,46,0,56,0,48,81,67,18,0,34,189,223,95,16,40,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,50,0,50,0,55,0,54,0,56,0,51,0,49,0,47,95,16,130,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,49,0,48,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,50,0,50,0,55,0,54,0,56,0,51,0,49,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,209,0,19,0,181,16,39,95,16,60,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,50,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,56,0,57,0,54,0,48,0,55,0,50,0,49,0,46,0,106,0,112,0,103,174,0,74,0,77,0,81,0,82,0,80,0,78,0,72,0,79,0,70,0,73,0,71,0,14,0,76,0,75,210,0,6,0,7,0,185,0,187,164,0,16,0,186,0,73,0,131,35,64,26,204,204,204,204,204,205,164,0,47,0,48,0,24,0,49,210,0,6,0,7,0,189,0,198,174,0,59,0,190,0,59,0,66,0,192,0,59,0,65,0,59,0,16,0,193,0,194,0,195,0,196,0,197,209,0,19,0,191,16,41,95,16,129,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,54,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,57,0,48,0,56,0,50,0,54,0,49,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,18,0,29,30,37,95,16,42,255,8,127,142,255,9,90,1,92,20,101,175,0,32,132,87,0,32,0,47,0,32,127,87,108,73,0,32,123,73,139,209,0,32,0,47,0,32,101,176,102,31,81,250,114,72,121,62,0,32,0,47,0,32,0,50,0,48,0,48,0,54,0,45,0,56,0,32,0,47,0,32,0,50,0,52,0,46,0,56,0,48,81,67,95,16,60,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,57,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,49,0,56,0,56,0,55,0,50,0,50,0,52,0,46,0,106,0,112,0,103,88,127,142,86,253,85,100,145,82,101,135,83,22,78,75,101,197,95,16,40,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,49,0,57,0,48,0,56,0,50,0,54,0,49,0,47,174,0,80,0,76,0,71,0,78,0,14,0,81,0,77,0,82,0,74,0,70,0,79,0,75,0,72,0,73,210,0,6,0,7,0,200,0,187,164,0,116,0,21,0,21,0,21,210,0,6,0,7,0,202,0,211,174,0,203,0,204,0,16,0,59,0,59,0,205,0,59,0,206,0,207,0,59,0,66,0,209,0,210,0,65,87,78,45,86,253,145,82,101,135,83,22,141,163,140,8,95,16,130,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,49,0,52,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,50,0,51,0,52,0,51,0,49,0,50,0,57,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,95,16,43,48,10,78,45,86,253,145,82,101,135,83,22,141,163,140,8,48,11,127,22,81,153,126,196,0,32,127,22,0,32,0,47,0,32,78,45,86,253,101,197,110,56,81,250,114,72,121,62,0,32,0,47,0,32,0,50,0,48,0,48,0,55,0,45,0,49,0,50,0,32,0,47,0,32,0,50,0,54,0,46,0,48,0,48,81,67,18,0,35,192,217,209,0,19,0,208,16,43,95,16,40,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,50,0,51,0,52,0,51,0,49,0,50,0,57,0,47,95,16,60,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,50,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,53,0,55,0,55,0,51,0,54,0,57,0,51,0,46,0,106,0,112,0,103,174,0,72,0,14,0,74,0,71,0,81,0,79,0,80,0,70,0,76,0,82,0,78,0,73,0,75,0,77,210,0,6,0,7,0,213,0,214,164,0,21,0,21,0,116,0,21,164,0,24,0,49,0,47,0,48,210,0,6,0,7,0,216,0,225,174,0,217,0,59,0,218,0,219,0,59,0,221,0,16,0,59,0,65,0,222,0,223,0,59,0,224,0,66,95,16,60,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,50,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,51,0,57,0,52,0,51,0,49,0,54,0,50,0,46,0,106,0,112,0,103,18,0,25,83,204,209,0,19,0,220,16,45,95,16,129,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,53,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,54,0,53,0,57,0,56,0,53,0,50,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,85,78,45,83,78,145,82,101,135,83,22,95,16,40,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,49,0,54,0,53,0,57,0,56,0,53,0,50,0,47,95,16,33,103,78,83,78,116,94,0,32,0,47,0,32,92,113,137,127,78,186,108,17,81,250,114,72,121,62,0,32,0,47,0,32,0,49,0,57,0,48,0,48,0,45,0,48,0,49,0,45,0,48,0,49,0,32,0,47,0,32,0,49,0,54,0,46,0,48,174,0,75,0,81,0,70,0,76,0,71,0,14,0,74,0,82,0,77,0,72,0,73,0,80,0,79,0,78,210,0,6,0,7,0,227,0,228,164,0,21,0,21,0,21,0,116,164,0,24,0,49,0,48,0,47,210,0,6,0,7,0,230,0,238,174,0,65,0,59,0,231,0,232,0,59,0,17,0,59,0,234,0,235,0,236,0,59,0,237,0,66,0,16,18,0,50,200,167,209,0,19,0,233,16,47,95,16,36,84,17,102,37,150,54,0,32,0,91,123,73,0,93,127,22,132,87,0,32,0,47,0,32,78,45,86,253,126,207,109,78,81,250,114,72,121,62,0,32,0,47,0,32,0,49,0,57,0,57,0,53,0,45,0,51,0,32,0,47,0,32,0,54,0,46,0,54,0,48,81,67,95,16,129,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,55,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,51,0,51,0,50,0,56,0,49,0,54,0,55,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,95,16,40,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,51,0,51,0,50,0,56,0,49,0,54,0,55,0,47,95,16,61,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,57,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,50,0,55,0,50,0,50,0,48,0,51,0,50,0,52,0,46,0,106,0,112,0,103,174,0,77,0,81,0,70,0,76,0,80,0,72,0,82,0,79,0,14,0,73,0,71,0,75,0,78,0,74,210,0,6,0,7,0,240,0,249,174,0,241,0,16,0,242,0,244,0,245,0,59,0,246,0,247,0,59,0,59,0,248,0,59,0,66,0,65,95,16,131,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,49,0,49,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,50,0,53,0,56,0,57,0,54,0,48,0,50,0,49,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,209,0,19,0,243,16,49,18,1,139,36,85,95,16,41,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,50,0,53,0,56,0,57,0,54,0,48,0,50,0,49,0,47,95,16,61,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,57,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,50,0,55,0,50,0,57,0,50,0,54,0,57,0,52,0,46,0,106,0,112,0,103,85,83,67,94,116,145,82,101,135,83,22,95,16,38,144,147,115,137,104,133,0,32,0,47,0,32,132,99,0,32,94,5,0,32,0,47,0,32,110,5,83,78,89,39,91,102,81,250,114,72,121,62,0,32,0,47,0,32,0,50,0,48,0,49,0,51,0,45,0,49,0,50,0,32,0,47,0,32,0,52,0,50,0,46,0,57,0,48,81,67,174,0,14,0,74,0,76,0,70,0,73,0,81,0,75,0,72,0,71,0,82,0,79,0,80,0,78,0,77,210,0,6,0,7,0,251,1,4,174,0,252,0,65,0,59,0,253,0,16,0,59,0,59,0,254,0,255,0,66,1,0,1,1,1,2,0,59,18,0,23,85,102,95,16,60,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,57,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,49,0,56,0,49,0,55,0,57,0,51,0,54,0,46,0,106,0,112,0,103,95,16,129,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,57,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,53,0,50,0,57,0,49,0,57,0,48,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,95,16,37,94,183,102,14,91,152,0,32,0,47,0,32,123,44,0,49,114,72,0,32,0,40,0,50,0,48,0,48,0,51,94,116,0,49,103,8,0,49,101,229,0,41,0,32,0,47,0,32,0,50,0,48,0,48,0,51,0,45,0,49,0,32,0,47,0,32,0,50,0,50,0,46,0,48,95,16,40,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,49,0,53,0,50,0,57,0,49,0,57,0,48,0,47,85,145,82,101,135,83,22,149,238,123,84,209,0,19,1,3,16,51,174,0,70,0,77,0,80,0,75,0,74,0,71,0,81,0,14,0,79,0,78,0,73,0,72,0,76,0,82,210,0,6,0,7,0,115,1,6,164,0,49,0,47,0,24,0,48,210,0,6,0,7,1,8,1,17,174,1,9,0,59,0,66,1,10,0,65,0,59,1,12,0,59,0,16,1,13,1,14,1,15,0,59,1,16,95,16,41,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,50,0,49,0,51,0,50,0,48,0,48,0,55,0,51,0,47,209,0,19,1,11,16,53,18,1,69,81,137,89,145,82,101,135,83,22,0,32,0,58,0,32,145,82,101,135,83,22,95,16,25,78,45,86,253,126,207,109,78,81,250,114,72,121,62,0,32,0,47,0,32,0,50,0,48,0,49,0,51,0,45,0,49,0,32,0,47,0,32,0,50,0,56,0,46,0,48,0,48,81,67,95,16,130,0,111,0,110,0,99,0,108,0,105,0,99,0,107,0,61,0,34,0,109,0,111,0,114,0,101,0,117,0,114,0,108,0,40,0,116,0,104,0,105,0,115,0,44,0,123,0,105,0,58,0,39,0,50,0,39,0,44,0,113,0,117,0,101,0,114,0,121,0,58,0,39,0,37,0,69,0,57,0,37,0,56,0,53,0,37,0,57,0,50,0,37,0,69,0,54,0,37,0,57,0,54,0,37,0,56,0,55,0,37,0,69,0,53,0,37,0,56,0,67,0,37,0,57,0,54,0,39,0,44,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,105,0,100,0,58,0,39,0,50,0,49,0,51,0,50,0,48,0,48,0,55,0,51,0,39,0,44,0,102,0,114,0,111,0,109,0,58,0,39,0,98,0,111,0,111,0,107,0,95,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,95,0,115,0,101,0,97,0,114,0,99,0,104,0,39,0,44,0,99,0,97,0,116,0,95,0,105,0,100,0,58,0,39,0,49,0,48,0,48,0,49,0,39,0,125,0,41,0,34,95,16,61,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,49,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,118,0,105,0,101,0,119,0,47,0,115,0,117,0,98,0,106,0,101,0,99,0,116,0,47,0,109,0,47,0,112,0,117,0,98,0,108,0,105,0,99,0,47,0,115,0,50,0,53,0,54,0,55,0,55,0,51,0,52,0,56,0,46,0,106,0,112,0,103,174,0,73,0,80,0,78,0,76,0,77,0,82,0,70,0,81,0,74,0,72,0,79,0,14,0,71,0,75,210,0,6,0,7,1,19,1,27,169,1,20,1,21,1,22,1,23,1,24,0,16,1,25,0,59,1,26,95,16,38,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,98,0,111,0,111,0,107,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,46,0,99,0,111,0,109,0,47,0,97,0,117,0,116,0,104,0,111,0,114,0,47,0,50,0,56,0,54,0,52,0,50,0,54,0,47,85,0,48,0,32,78,186,101,54,133,207,18,0,4,94,218,81,0,32,95,16,108,0,104,0,116,0,116,0,112,0,115,0,58,0,47,0,47,0,105,0,109,0,103,0,51,0,46,0,100,0,111,0,117,0,98,0,97,0,110,0,105,0,111,0,46,0,99,0,111,0,109,0,47,0,102,0,47,0,98,0,111,0,111,0,107,0,47,0,48,0,101,0,50,0,55,0,102,0,99,0,97,0,100,0,48,0,101,0,54,0,52,0,100,0,97,0,57,0,55,0,54,0,57,0,102,0,55,0,52,0,56,0,98,0,50,0,48,0,55,0,48,0,97,0,50,0,57,0,53,0,98,0,53,0,54,0,52,0,48,0,53,0,48,0,55,0,55,0,47,0,112,0,105,0,99,0,115,0,47,0,98,0,111,0,111,0,107,0,47,0,97,0,117,0,116,0,104,0,111,0,114,0,45,0,100,0,101,0,102,0,97,0,117,0,108,0,116,0,45,0,108,0,97,0,114,0,103,0,101,0,46,0,112,0,110,0,103,93,0,115,0,101,0,97,0,114,0,99,0,104,0,95,0,99,0,111,0,109,0,109,0,111,0,110,95,16,36,79,92,128,5,0,32,0,47,0,32,132,97,132,4,145,82,99,7,83,87,0,32,0,47,0,32,132,97,132,4,145,82,84,13,94,132,255,13,91,204,150,134,132,97,132,4,145,82,78,27,78,102,0,32,0,47,0,32,145,137,0,183,97,27,0,183,132,97,132,4,145,82,169,0,73,0,79,0,70,0,72,0,75,0,14,0,77,0,81,0,74,209,0,6,1,29,175,16,16,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,37,1,38,1,39,1,40,1,41,1,42,1,43,1,44,1,45,16,55,16,34,16,30,16,54,16,28,16,36,16,46,16,42,16,48,16,32,16,52,16,40,16,50,16,38,16,26,16,44,0,0,0,117,0,128,0,141,0,152,0,163,0,172,0,174,0,176,0,191,0,200,0,211,0,220,0,227,0,232,0,234,0,237,0,238,0,245,0,250,0,252,0,254,1,0,1,15,1,17,1,19,1,21,1,23,1,25,1,27,1,36,1,47,1,68,1,81,1,98,1,125,1,136,1,153,1,166,1,171,1,188,1,211,1,232,1,243,1,252,2,5,2,18,2,27,2,29,2,31,2,33,2,50,2,71,2,98,2,117,2,124,2,137,2,146,2,175,2,180,2,181,2,192,3,21,3,146,3,151,3,153,3,182,3,183,4,16,5,25,5,54,5,56,5,58,5,60,5,62,5,64,5,66,5,68,5,70,5,72,5,74,5,76,5,78,5,80,5,89,5,98,5,107,5,116,5,125,5,134,5,163,5,168,5,170,5,181,6,8,7,13,7,74,7,79,7,202,7,231,7,240,7,249,8,2,8,11,8,20,8,49,8,60,8,65,8,67,8,192,9,199,9,204,10,33,10,94,10,123,10,132,10,141,10,154,10,163,10,172,10,201,11,16,12,23,12,34,12,39,12,124,12,249,12,254,13,0,13,29,13,38,13,47,13,56,13,65,13,67,13,76,13,85,13,114,13,119,13,202,13,207,13,209,14,18,14,141,15,146,15,175,15,184,15,193,15,202,15,211,15,220,15,249,16,62,16,145,16,150,16,152,17,19,17,24,18,29,18,58,18,67,18,76,18,85,18,114,19,121,19,132,19,215,19,220,20,35,20,158,20,163,20,192,20,201,20,210,20,219,20,248,21,7,21,72,21,77,21,160,22,167,22,172,22,174,23,41,23,70,23,79,23,88,23,97,23,106,23,115,23,144,23,149,23,151,24,156,24,161,24,248,25,115,25,132,25,215,25,244,25,253,26,6,26,15,26,44,26,59,27,66,27,155,27,160,27,165,27,167,27,250,28,117,28,146,28,155,28,164,28,173,28,182,28,211,29,78,29,83,29,88,29,90,30,95,30,106,30,189,31,2,31,31,31,40,31,49,31,58,31,67,31,96,31,101,31,106,31,108,31,183,32,188,33,15,33,140,33,169,33,178,33,207,34,216,34,221,34,223,34,228,35,57,35,182,35,193,36,16,36,45,36,54,36,83,36,88,36,211,37,216,38,37,38,120,38,131,38,136,38,138,38,167,38,176,38,185,38,194,38,223,39,52,39,57,39,59,39,64,39,83,39,136,40,143,41,12,41,41,41,50,41,69,41,148,41,159,41,164,41,167,42,130,42,157,42,232,42,251,43,0,43,35,43,37,43,39,43,41,43,43,43,45,43,47,43,49,43,51,43,53,43,55,43,57,43,59,43,61,43,63,43,65,0,0,0,0,0,0,2,2,0,0,0,0,0,0,1,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,67]
let arr = new Uint8Array(arr_big)
get_data.exports(arr)
// console.log(data_arr)
// for (let i of data_arr){
//     if (i !== '\x00'){
//         console.log(i)
//     }
// }
console.log(data_arr.length)
// console.log(get_data.exports(arr))